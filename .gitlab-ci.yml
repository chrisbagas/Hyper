default:
  image: node:16.16.0

stages:
  - deploy
  - sonarqube

deploy_preview:
  stage: deploy
  cache:
    - key:
        files:
          - yarn.lock
      paths:
        - .yarn-cache/
  only:
    - staging
  script:
    - npm install --global vercel 
    - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
    - yarn install --cache-folder .yarn-cache
    - vercel build --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --token=$VERCEL_TOKEN > domain.txt
    - vercel alias --token=$VERCEL_TOKEN set `cat domain.txt` staging-hyper-gg

deploy_production:
  stage: deploy
  cache:
    - key:
        files:
          - yarn.lock
      paths:
        - .yarn-cache/
  only:
    - main
  script:
    - npm install --global vercel
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - yarn install --cache-folder .yarn-cache
    - vercel build --prod --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

sonarqube_prod:
  stage: sonarqube
  only:
    - staging
    - merge_requests
    - main
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner -X -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=$SONAR_PROJECT_KEY
  allow_failure: true
